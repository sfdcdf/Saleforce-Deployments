/*
//Reason : “BeaconHS1Migration” : Inactivated the completed class , as this is not needed for LH Product.
//By : Mahesh Bogila , 7/3/2019
/*
 * To run it every 30 minutes go to Developer Console: Debug->Open Execute Anonymous Window:
        System.schedule('CTS Sync Service Reprocess Scheduler 1', '0 0 * * * ?', new CTSSyncServiceReprocssScheduler());        
        System.schedule('CTS Sync Service Reprocess Scheduler 2', '0 30 * * * ?', new CTSSyncServiceReprocssScheduler());        
 */
global with sharing class CTSSyncServiceReprocssScheduler implements Schedulable {  
    
    Integer i1 = 1; 
    Integer i2 = 1; 
    Integer i3 = 1; 
    Integer i4 = 1; 
    Integer i5 = 1; 
    Integer i6 = 1; 
    Integer i7 = 1; 
    Integer i8 = 1; 
    Integer i9 = 1; 
    Integer i10 = 1; 

   
    global void execute(SchedulableContext sc) {   
       /* System.Debug('*** Entering Method execute of CTSSyncServiceReprocssScheduler ***');
         
        Reprocess('Case');
        Reprocess('Organic_Analysis__c');
        Reprocess('Quality_Case__c');
        Reprocess('Customer_Surveys__c');      
        
        System.Debug('*** End Method execute of CTSSyncServiceReprocssScheduler ***');  */                        
    }
    
  /*   private void Reprocess(String objType)
    {
        List<SFDCToCTSAsynchRequest__c> asyncRecords = [SELECT Id,                        
                        Name,
                        NumberOfRetryAttempts__c,
                        ObjectId__c,
                        Object_Name__c,                       
                        Status__c
                   FROM SFDCToCTSAsynchRequest__c
                   WHERE Object_Name__c = :objType AND Status__c = 'ERROR' AND NumberOfRetryAttempts__c < 3
                   LIMIT 10]; 
        
        if (asyncRecords.size() > 0)
        {
            FOR(SFDCToCTSAsynchRequest__c record : asyncRecords)
                record.Status__c = 'REPROCESS';
                
            Update asyncRecords;
        }                    
    }*/
}