<apex:page controller="dca_cnvrt_file.ConvertAttachmentsScheduleController" tabStyle="Convert_Attachments_to_Files__tab">

    <apex:slds />

    <style>

        .slds-scope .apexp .bPageBlock p {
            margin-bottom: inherit; /* undo classic styling so slds is applied */
        }

        .slds-scope .section-title {
            background-color: #d8edff;
            border-radius: 5px;
            padding: 0.4em;
        }

    </style>

    <apex:form >

        <div class="slds-scope">

            <div class="slds-m-around_large">

                <div class="slds-page-header slds-box">
                    <nav role="navigation" aria-label="Breadcrumbs">
                        <ol class="slds-breadcrumb slds-list_horizontal">
                            <li class="slds-breadcrumb__item slds-text-title_caps"><a href="{!URLFOR($Page.ConvertAttachmentsMenuPage)}">Main Menu</a></li>
                            <li class="slds-breadcrumb__item slds-text-title_caps"><a href="{!URLFOR($Page.ConvertAttachmentsSchedulePage)}">Automate Conversion</a></li>
                        </ol>
                    </nav>
                    <p class="slds-page-header__title">
                        Convert Attachments to Files
                    </p>
                </div>

                <div class="slds-m-around_large"/>

                <div>
                    <p>
                        Schedule how often new attachments should be converted to files.
                    </p>
                    <p>
                        This may be necessary because attachments might still be created after initial conversion for various reasons,
                        such as from user uploads or integrations.
                    </p>
                </div>

                <div class="slds-m-around_large"/>

                <apex:outputPanel id="mainPanel" layout="block">

                    <apex:pageMessages />

                    <apex:outputPanel rendered="{!NOT(ISBLANK(message))}">
                        <div class="slds-m-bottom_small">
                            <div id="messageContainer" class="slds-notify_container" style="position: relative;">
                                <div class="slds-notify slds-notify_alert {!IF(success, 'slds-theme_success', 'slds-theme_error')} slds-theme_alert-texture" role="alert">
                                    <button class="slds-button slds-notify__close slds-button_icon-inverse" title="Close" onclick="dismissMessages(0); return false;">
                                        X
                                        <span class="slds-assistive-text">Close</span>
                                    </button>
                                    <span class="slds-assistive-text">{!IF(success, 'Success', 'Error')}</span>
                                    <h2>
                                        <apex:outputText value="{!message}"/>
                                    </h2>
                                </div>
                            </div>
                        </div>
                    </apex:outputPanel>

                    <apex:pageBlock mode="maindetail">

                        <div class="slds-box slds-m-top_small slds-m-bottom_small">

                            <p class="slds-text-heading_medium slds-m-bottom_small section-title">
                                <b>Enable Attachments uploaded to Notes &amp; Attachments related list upload as Files instead</b>
                            </p>

                            <p class="slds-m-bottom_medium">
                                If your users upload attachments in Salesforce Classic then you may want to enable this setting so they are uploaded as files instead.
                                <br/>
                                Click <a href="/setup/content/FilesGeneralSettings.apexp">here</a> to be taken to the Salesforce Files Settings page in Setup, or follow below directions.
                            </p>

                            <p class="slds-m-bottom_medium">
                                <ol class="slds-list_ordered">
                                    <li class="slds-item">
                                        From Setup, enter <b>Salesforce Files</b> in the <b>Quick Find</b> box, then select <b>General Settings</b>.
                                    </li>
                                    <li class="slds-item">
                                        Select the option "Files uploaded to the Attachments related list on records are uploaded as Salesforce Files, not as attachments".
                                    </li>
                                </ol>
                            </p>

                            <p class="slds-m-bottom_medium">
                                This setting only affects the Notes &amp; Attachments related list in Salesforce Classic.
                                Lightning Experience already enforces this behavior.
                            </p>

                            <p class="slds-m-bottom_medium">
                                <a href="https://releasenotes.docs.salesforce.com/en-us/spring16/release-notes/rn_files_notes_attachments_list.htm" target="_blank">
                                    https://releasenotes.docs.salesforce.com/en-us/spring16/release-notes/rn_files_notes_attachments_list.htm
                                </a>
                            </p>

                        </div>

                        <div class="slds-box slds-m-top_small slds-m-bottom_small">

                            <p class="slds-text-heading_medium slds-m-bottom_small section-title">
                                <b>Enable Attachment Trigger</b>
                            </p>

                            <p class="slds-m-bottom_medium">
                                If you have integrations that create new attachments, this trigger will submit a background job to convert them to files as they are inserted.
                            </p>

                            <p class="slds-m-bottom_medium">
                                Please carefully review your <a href="{!URLFOR($Page.ConvertAttachmentsSettingsPage)}">conversion and sharing settings</a> before enabling this option.
                            </p>

                            <p class="slds-m-bottom_medium">

                                <apex:pageBlockSection columns="1">

                                    <apex:inputCheckbox id="enable-trigger-checkbox"
                                                        label="Enable Trigger"
                                                        value="{!settings.dca_cnvrt_file__Convert_in_Near_Real_Time__c}"/>

                                </apex:pageBlockSection>

                            </p>

                            <div class="slds-grid slds-grid_align-center">
                                <div slds="slds-col">
                                    <apex:commandButton value=" Save " action="{!save}" styleClass="slds-button slds-button_brand"/>
                                </div>
                            </div>

                        </div>

                        <div class="slds-box slds-m-top_small slds-m-bottom_small">

                            <p class="slds-text-heading_medium slds-m-bottom_small section-title">
                                <b>Schedule Job</b>
                            </p>

                            <p class="slds-m-bottom_medium">
                                Schedule a recurring job to convert new attachments to files.
                                <br/>
                                You might consider this option if you have scenarios where new attachments are created but are <a href="https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/apex_triggers_ignoring_operations.htm" target="_blank">not causing the trigger to fire</a>.
                                <br/>
                                Click <a href="/ui/setup/apex/batch/ScheduleBatchApexPage?setupid=ApexClasses&ac=ConvertAttachmentsToFilesSchedulable&job_name=Convert+Attachments+to+Files+Job&retURL=/08e?retURL=%2Fui%2Fsetup%2FSetup%3Fsetupid%3DJobs&setupid=ScheduledJobs">here</a> to be taken to the Schedule Job page in Setup, or follow below directions.
                            </p>

                            <p class="slds-m-bottom_medium">
                                <ol class="slds-list_ordered">
                                    <li class="slds-item">
                                        From Setup, enter <b>Apex Classes</b> in the <b>Quick Find</b> box, then select <b>Schedule Apex</b> button.
                                    </li>
                                    <li class="slds-item">
                                        Specify Apex Class "ConvertAttachmentsToFilesSchedulable" and your desired schedule.
                                    </li>
                                </ol>
                            </p>

                            <p class="slds-m-bottom_medium">
                                Please carefully review your <a href="{!URLFOR($Page.dca_cnvrt_file__ConvertAttachmentsSettingsPage)}">conversion and sharing settings</a> before enabling this option.
                            </p>

                            <div class="slds-notify_container" style="position: relative;">
                                <div class="slds-notify slds-notify_toast slds-theme_warning" role="alert">
                                    <div class="slds-notify__content">
                                        <h2 class="slds-text-heading_small">
                                            <b>Important:</b> If you change your conversion and sharing settings the scheduled job will use them at its next scheduled run time.
                                        </h2>
                                    </div>
                                </div>
                            </div>

                        </div>

                    </apex:pageBlock>

                    <script>

                        var timerId;

                        function dismissMessages( waitTime ) {
                            clearTimeout( timerId );
                            timerId = setTimeout( function() {
                                document.getElementById('messageContainer').className += ' slds-hide';
                            }, waitTime );
                        }

                    </script>

                </apex:outputPanel>

            </div>

        </div>

    </apex:form>

</apex:page>