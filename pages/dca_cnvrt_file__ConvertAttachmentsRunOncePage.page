<apex:page controller="dca_cnvrt_file.ConvertAttachmentsRunOnceController" tabStyle="Convert_Attachments_to_Files__tab">

    <apex:slds />

    <style>

        .slds-scope .apexp .bPageBlock p {
            margin-bottom: inherit; /* undo classic styling so slds is applied */
        }

    </style>

    <apex:form >

        <div class="slds-scope">

            <div class="slds-m-around_large">

                <div class="slds-page-header slds-box">
                    <nav role="navigation" aria-label="Breadcrumbs">
                        <ol class="slds-breadcrumb slds-list_horizontal">
                            <li class="slds-breadcrumb__item slds-text-title_caps"><a href="{!URLFOR($Page.ConvertAttachmentsMenuPage)}">Main Menu</a></li>
                            <li class="slds-breadcrumb__item slds-text-title_caps"><a href="{!URLFOR($Page.ConvertAttachmentsRunOncePage)}">Convert Attachments</a></li>
                        </ol>
                    </nav>
                    <p class="slds-page-header__title">
                        Convert Attachments to Files
                    </p>
                </div>

                <div class="slds-m-around_large"/>

                <div>
                    <p>
                        Configure and submit a one-time conversion job.
                        You may repeat this process as often as you need.
                        Attachments that have already been converted will be skipped so that duplicate files are not created.
                    </p>
                </div>

                <div class="slds-m-around_large"/>

                <apex:outputPanel id="mainPanel" layout="block">

                    <apex:pageMessages />

                    <apex:outputPanel rendered="{!NOT(ISBLANK(message))}">
                        <div class="slds-m-bottom_small">
                            <div id="messageContainer" class="slds-notify_container" style="position: relative;">
                                <div class="slds-notify slds-notify_alert {!IF(success, 'slds-theme_success', 'slds-theme_error')} slds-theme_alert-texture" role="alert">
                                    <button class="slds-button slds-notify__close slds-button_icon-inverse" title="Close" onclick="dismissMessages(0); return false;">
                                        X
                                        <span class="slds-assistive-text">Close</span>
                                    </button>
                                    <span class="slds-assistive-text">{!IF(success, 'Success', 'Error')}</span>
                                    <h2>
                                        <apex:outputText value="{!message}"/>
                                    </h2>
                                </div>
                            </div>
                        </div>
                    </apex:outputPanel>

                    <apex:pageBlock mode="maindetail">

                        <div class="slds-box slds-m-top_small slds-m-bottom_small">

                            <apex:pageBlockSection columns="1">

                                <apex:outputLabel value="Attachment Parent Record IDs (comma-separated)"
                                                  style="font-weight: bold;"/>

                                <apex:inputTextArea label=""
                                                    value="{!parentIdsCsv}"
                                                    style="width:90%"/>

                                <div class="slds-box slds-theme_warning" style="width: 100%; text-align: left;">
                                    <p>
                                        You may test on a small set of records by specifying one or more attachment parent record ids,
                                        otherwise all attachments will be converted.
                                    </p>
                                </div>

                            </apex:pageBlockSection>

                        </div>

                        <div class="slds-box slds-m-top_small slds-m-bottom_small">

                            <apex:pageBlockSection columns="1">

                                <apex:outputLabel value="Max Records to Convert (approximately)"
                                                  style="font-weight: bold;"/>

                                <apex:inputText label=""
                                                value="{!options.maxRecordsToConvert}"/>

                                <div class="slds-box slds-theme_warning" style="width: 100%; text-align: left;">
                                    <p>
                                        The maximum number of files that can be published in a 24-hour period is <b>200,000</b>. (<a href="https://developer.salesforce.com/docs/atlas.en-us.api.meta/api/sforce_api_objects_contentversion.htm" target="_blank">documentation</a>)
                                        <br/><br/>
                                        This includes files created from conversion or files that users upload.
                                        <br/><br/>
                                        Salesforce's API does not let us know how many have been published within the 24-hour period
                                        so there is no easy way to check and avoid hitting the limit.
                                        <br/><br/>
                                        To help mitigate hitting this limit you may provide a Max Records to Convert number to set your own limit and the batch job will stop converting attachments to files
                                        when either:
                                        <ol>
                                            <li>(a) The limit you provide is reached</li>
                                            <li>(b) There are no more attachments to convert</li>
                                            <li>(c) The error "ContentPublication Limit exceeded" occurs</li>
                                        </ol>
                                        <br/>
                                        If you do reach the max limit in a 24-hour period and get error <b>ContentPublication Limit exceeded</b> then you will need to wait
                                        some time until your quota restores. Unfortunately, Salesforce does not let us know how close you are to hitting the limit, only that you have reached it.
                                        Recommendation, try again another day to continue the conversion process of remaining attachments.
                                        <br/><br/>
                                        The count of converted attachments is incremented after each Batch Size of attachments are processed.
                                        So it is possible that as many as ( Max Records To Convert + Batch Size ) records get converted before the conversion job stops.
                                    </p>
                                </div>

                            </apex:pageBlockSection>

                        </div>

                        <div class="slds-box slds-m-top_small slds-m-bottom_small">

                            <apex:pageBlockSection columns="1">

                                <apex:outputLabel value="Batch Size"
                                                  style="font-weight: bold;"/>

                                <apex:inputText label=""
                                                value="{!batchSize}"/>

                                <div class="slds-box slds-theme_warning" style="width: 100%; text-align: left;">
                                    <p>
                                        Same purpose and reason why you might set the Batch Size when using Data Loader,
                                        you may want to increase or decrease this value (1 minimum, 200 maximum) for performance reasons.
                                        <br/><br/>
                                        If you have other Apex Triggers on ContentVersion, ContentNote, or ContentDocumentLink objects that themselves
                                        perform SOQL queries or insert/update/delete records then that may risk hitting governor limits around
                                        max number of queries that can be made or DML statements. Recommendation, either disable the other Apex Triggers or reduce Batch Size.
                                    </p>
                                </div>

                            </apex:pageBlockSection>

                        </div>

                    </apex:pageBlock>

                    <div class="slds-grid slds-grid_align-center">
                        <div slds="slds-col">
                            <button class="slds-button slds-button_brand" onclick="showConfirmDialog(); return false;">Submit</button>
                            <apex:commandButton value=" Cancel " action="{!URLFOR($Page.ConvertAttachmentsMenuPage)}" styleClass="slds-button slds-button_neutral"/>
                        </div>
                    </div>

                    <div id="submit-confirm-dialog" role="dialog" tabindex="-1" aria-labelledby="header43" class="slds-modal slds-fade-in-open slds-hide">
                        <div class="slds-modal__container">
                            <div class="slds-modal__header">
                                <button class="slds-button slds-modal__close slds-button_icon-inverse" onclick="closeConfirmDialog(); return false;" title="Close">
                                    X
                                    <span class="slds-assistive-text">Close</span>
                                </button>
                                <h2 id="header43" class="slds-text-heading_medium">Confirm Job Submit</h2>
                            </div>
                            <div class="slds-modal__content slds-p-around_medium">
                                <p>
                                    Make sure you have carefully reviewed your <a href="{!URLFOR($Page.ConvertAttachmentsSettingsPage)}">conversion and sharing settings</a>
                                    and have made any necessary data backups.
                                </p>
                            </div>
                            <div class="slds-modal__footer">
                                <button class="slds-button slds-button_brand" onclick="submitJob(); return false;">Yes, I have</button>
                                <button class="slds-button slds-button_neutral" onclick="closeConfirmDialog(); return false;">No, let me recheck</button>
                            </div>
                        </div>
                    </div>
                    <div id="submit-confirm-dialog-backdrop" class="slds-backdrop slds-backdrop_open slds-hide"></div>

                    <apex:actionFunction name="submitJob" action="{!submitJob}"/>

                    <script>

                        var timerId;

                        function dismissMessages( waitTime ) {
                            clearTimeout( timerId );
                            timerId = setTimeout( function() {
                                document.getElementById('messageContainer').className += ' slds-hide';
                            }, waitTime );
                        }

                        function showConfirmDialog() {

                            var domIds = [ 'submit-confirm-dialog', 'submit-confirm-dialog-backdrop' ];

                            for ( var i = 0; i < domIds.length; i++ ) {

                                var domElmt = document.getElementById( domIds[i] );

                                var className = domElmt.className;

                                domElmt.className = domElmt.className.replace(' slds-hide', '' );

                            }

                        }

                        function closeConfirmDialog() {

                            var domIds = [ 'submit-confirm-dialog', 'submit-confirm-dialog-backdrop' ];

                            for ( var i = 0; i < domIds.length; i++ ) {

                                var domElmt = document.getElementById( domIds[i] );

                                domElmt.className += ' slds-hide';

                            }

                        }

                    </script>

                </apex:outputPanel>

            </div>

        </div>

    </apex:form>

</apex:page>